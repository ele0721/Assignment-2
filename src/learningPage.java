
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Helen
 */
public class learningPage extends javax.swing.JFrame {
    private Learn learn;
    private Bookmark bookmark;
    private String username;
    private User user;
    /**
     * Creates new form learningPage
     */
    public learningPage(String username) {
        initComponents();
        // Initialize variables and load informations
        this.username = username;
        this.learn = new Learn(username);
        this.bookmark = new Bookmark(username);
        this.user = UserSession.getInstance().getUser();
        learn.loadInformation("informations.txt");
        learn.setIndex(0);
        textBox.setText(learn.getSection(0));
        updateBookmarkList();
        updateProgressBar();
        loginButton.setVisible(false);
        // If user is in guest mode, disable bookmark feature
        if (username.equals("guest")){
            MenuBar.setVisible(false);
            bookmarkButton.setVisible(false);
            saveButton1.setVisible(false);
            loginButton.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookmarkFrame = new javax.swing.JFrame();
        bookmarkComboBox = new javax.swing.JComboBox<>();
        removeButton = new javax.swing.JButton();
        save = new javax.swing.JFrame();
        bookmarkNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        saveButton2 = new javax.swing.JButton();
        allAchievements = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        achievementBox = new javax.swing.JTextArea();
        saveButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBox = new javax.swing.JTextPane();
        nextButton = new javax.swing.JButton();
        bookmarkButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        loginButton = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        modeMenu = new javax.swing.JMenu();
        Learn = new javax.swing.JMenuItem();
        Quiz = new javax.swing.JMenuItem();
        achievementMenu = new javax.swing.JMenu();

        bookmarkFrame.setMinimumSize(new java.awt.Dimension(320, 110));
        bookmarkFrame.setSize(new java.awt.Dimension(564, 200));

        bookmarkComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bookmarkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookmarkComboBoxActionPerformed(evt);
            }
        });

        removeButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookmarkFrameLayout = new javax.swing.GroupLayout(bookmarkFrame.getContentPane());
        bookmarkFrame.getContentPane().setLayout(bookmarkFrameLayout);
        bookmarkFrameLayout.setHorizontalGroup(
            bookmarkFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookmarkFrameLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(bookmarkComboBox, 0, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeButton)
                .addGap(37, 37, 37))
        );
        bookmarkFrameLayout.setVerticalGroup(
            bookmarkFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookmarkFrameLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(bookmarkFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(bookmarkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        save.setMinimumSize(new java.awt.Dimension(307, 100));
        save.setSize(new java.awt.Dimension(564, 200));

        bookmarkNameField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Name:");

        saveButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveButton2.setText("Save");
        saveButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout saveLayout = new javax.swing.GroupLayout(save.getContentPane());
        save.getContentPane().setLayout(saveLayout);
        saveLayout.setHorizontalGroup(
            saveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(saveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saveLayout.createSequentialGroup()
                        .addComponent(bookmarkNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton2)
                        .addGap(68, 68, 68))
                    .addGroup(saveLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        saveLayout.setVerticalGroup(
            saveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(saveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton2)
                    .addComponent(bookmarkNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        allAchievements.setFocusCycleRoot(false);
        allAchievements.setPreferredSize(new java.awt.Dimension(400, 300));
        allAchievements.setSize(new java.awt.Dimension(400, 300));

        achievementBox.setEditable(false);
        achievementBox.setColumns(20);
        achievementBox.setRows(5);
        jScrollPane3.setViewportView(achievementBox);

        javax.swing.GroupLayout allAchievementsLayout = new javax.swing.GroupLayout(allAchievements.getContentPane());
        allAchievements.getContentPane().setLayout(allAchievementsLayout);
        allAchievementsLayout.setHorizontalGroup(
            allAchievementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allAchievementsLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        allAchievementsLayout.setVerticalGroup(
            allAchievementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allAchievementsLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(564, 703));

        saveButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveButton1.setText("Save");
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });

        textBox.setEditable(false);
        textBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textBox.setAutoscrolls(false);
        jScrollPane1.setViewportView(textBox);

        nextButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        bookmarkButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bookmarkButton.setText("Bookmark");
        bookmarkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookmarkButtonActionPerformed(evt);
            }
        });

        loginButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        modeMenu.setText("Mode");
        modeMenu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        modeMenu.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Learn.setText("Learn");
        Learn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LearnActionPerformed(evt);
            }
        });
        modeMenu.add(Learn);

        Quiz.setText("Quiz");
        Quiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuizActionPerformed(evt);
            }
        });
        modeMenu.add(Quiz);

        MenuBar.add(modeMenu);

        achievementMenu.setText("Achievements");
        achievementMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                achievementMenuMouseClicked(evt);
            }
        });
        MenuBar.add(achievementMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loginButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(nextButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                                .addComponent(bookmarkButton)))))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(loginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookmarkButton)
                    .addComponent(saveButton1))
                .addGap(34, 34, 34)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(nextButton)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Updates the bookmark list by reloading saved bookmarks
     */
    private void updateBookmarkList() { 
        // PREVENT AUTO SELECTION 
        ActionListener[] listeners = bookmarkComboBox.getActionListeners();
        for (ActionListener listener : listeners) {
            bookmarkComboBox.removeActionListener(listener);
        }
        
        bookmarkComboBox.removeAllItems(); // Clear existing items
        List<String[]> bookmarks = bookmark.loadBookmarks(); // Load saved bookmarks
        // Check and display message if no bookmarks exist
        if (bookmarks.isEmpty()) {   
            bookmarkComboBox.addItem("No bookmarks available");
        } else {
            for (String[] entry : bookmarks) { // Loop through bookmark array
            bookmarkComboBox.addItem(entry[0]); // Add each bookmark name to dropdown
            }
        }
    
        // PREVENT AUTO SELECTION
        for (ActionListener listener : listeners) {
            bookmarkComboBox.addActionListener(listener);
        }
        bookmarkComboBox.setSelectedIndex(-1); // Ensure no bookmark is auto-selected from the list
    }
    
    /**
     * Updates the progress bar with the current learning progress percentage
     */
    private void updateProgressBar() {
        int progress = learn.getProgressPercentage(); // Get progress percentage
        progressBar.setValue(progress); // Update progress bar
        }
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        updateProgressBar(); // Update progress bar
        String section = learn.getNextSection(); // Get next learning section
        textBox.setText(section); // Display next section
        // Unlock achievement when all lessons are completed
        if (learn.isFinished()) {
            user.completeLesson();
            // Display message if user has not unlock the achievement
            if (!user.alreadyUnlocked){
                JOptionPane.showMessageDialog(textBox, "📖 Achievement Unlocked: Completed all lessons!");
            }
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void bookmarkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookmarkComboBoxActionPerformed
        String selectedBookmark = (String) bookmarkComboBox.getSelectedItem();  // Get selected bookmark
        if (selectedBookmark != null) { // Check if a bookmark is selected
            learn.goToBookmark(selectedBookmark); // Navigate to selected bookmark 
            textBox.setText(learn.getSection(learn.getIndex()-1)); // Display bookmarked section 
        }
        updateProgressBar(); // Update progress bar
    }//GEN-LAST:event_bookmarkComboBoxActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String selectedBookmark = (String) bookmarkComboBox.getSelectedItem(); // Get selected bookmark
        if (selectedBookmark != null) { // Check if a bookmark is selected
            learn.removeBookmark(selectedBookmark); // Remove selected bookmark 
            updateBookmarkList(); // Update bookmark list
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void saveButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton2ActionPerformed
        String name = bookmarkNameField.getText().trim(); // Get entered bookmark name
        if (!name.isEmpty()) { // Ensure name is not empty
            learn.addBookmark(name); // Save new bookmark
            updateBookmarkList(); // Update bookmark list
            save.setVisible(false);
    }
    }//GEN-LAST:event_saveButton2ActionPerformed

    private void bookmarkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookmarkButtonActionPerformed
        bookmarkFrame.setVisible(true); // Show bookmark frame
    }//GEN-LAST:event_bookmarkButtonActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        save.setVisible(true);  // Show save frame
        bookmarkNameField.setText(""); // Clear bookmark name text field 
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        new Login().setVisible(true); // Open login window
        this.setVisible(false);
    }//GEN-LAST:event_loginButtonActionPerformed

    private void LearnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LearnActionPerformed
        Mode learnMode = new Learn(user.getUsername()); // Create learn mode
        user.setMode(learnMode); // Set learn mode
        // Open the learning page for users and hide the current window
        new learningPage(user.getUsername()).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_LearnActionPerformed

    private void QuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuizActionPerformed
        Mode quizMode = new Quiz1(user.getUsername()); // Create Quiz mode
        user.setMode(quizMode); // Set Quiz mode
        new Quiz().setVisible(true); // Open quiz window
        this.setVisible(false); // Hide current window
    }//GEN-LAST:event_QuizActionPerformed

    private void achievementMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_achievementMenuMouseClicked
        // Get the current user in the session
        User currentUser = UserSession.getInstance().getUser();
        // Retrieve the list of unlocked achievements
        List<Achievement> achievements = currentUser.getAchievements();
        // Check if achievements exist
        if (!achievements.isEmpty()) {
            achievementBox.setText("All ahievements:\n");
            // Loop through each achievement and display it in the text box
            for (Achievement achievement : achievements) {
                achievementBox.append(achievement.unlockAchievement() + "\n");
            }
        }
        allAchievements.setVisible(true); // Make the achievements panel visible
    }//GEN-LAST:event_achievementMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(learningPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(learningPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(learningPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(learningPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Learn;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem Quiz;
    private javax.swing.JTextArea achievementBox;
    private javax.swing.JMenu achievementMenu;
    private javax.swing.JFrame allAchievements;
    private javax.swing.JButton bookmarkButton;
    private javax.swing.JComboBox<String> bookmarkComboBox;
    private javax.swing.JFrame bookmarkFrame;
    private javax.swing.JTextField bookmarkNameField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton loginButton;
    private javax.swing.JMenu modeMenu;
    private javax.swing.JButton nextButton;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton removeButton;
    private javax.swing.JFrame save;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton saveButton2;
    private javax.swing.JTextPane textBox;
    // End of variables declaration//GEN-END:variables
}

